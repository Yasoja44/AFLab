///1
/*
console.log('Hello World');
console.log('');
 */

///2

/*
const os = require('os');

console.log('Architecture ' + os.arch());
console.log('CPUs ' + os.cpus().length);
console.log('CPUs Total Memory ' +os.totalmem());
console.log('CPUs Free Memory ' +os.freemem())

const os2 = require('os-utils');

os2.cpuUsage(function(val){
    console.log( 'CPU Usage ' + val + '%');
});

console.log('OS ' + os.platform());
console.log('');

 */

///3
/*
const fs = require('fs');
const fileName =  __dirname + '/test.txt';

fs.readFile(fileName,(eer,data) =>{
    if(eer){
        console.error(eer);
    }
    console.log(data.toString());
});

const data = fs.readFileSync(fileName);
console.log(data.toString());
console.log('');
 */

///4
/*
const fs = require('fs');

const inFileName =  __dirname + '/test.txt';
const outFileName =  __dirname + '/test-copy.txt';

const readStream = fs.createReadStream(inFileName);
const writeStream = fs.createWriteStream(outFileName);

readStream.pipe(writeStream);

readStream.on('data',data =>{
   console.log(data.toString());
});

writeStream.on('close',()=>{
   console.log('File write completed')
});

readStream.on('end',()=>{
   console.log('File read completed')
})
 */

///5


const http = require('http');

http.createServer((req,res) =>{
    res.setHeader('Content-Type','text/html');
    res.write('<h1>Hello World</h1>');
    res.end();
}).listen(3000);

http.createServer((req,res) =>{

    res.setHeader('Content-Type','text/html');

    switch(req.method) {
        case 'GET' :
            res.write('<h1>Hello World</h1>');
            res.end();
            break;
        case 'POST' :
            req.on('data', data => {
                res.write('<h1>Hello ' + data + '</h1>');
                res.end();
            });
            break;
        case 'PUT' :
           req.on('data', data => {
              res.write(`Put request received with: ${data} `);
              res.end();
           });
           break;
    }

}).listen(3001,(err) => {
    console.log('Server is listening to port 3001');
    console.log();
});

http.listen(3001).on("error", console.log("Error!!!"));



